name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: kubectl

jobs:

  check_version:
    runs-on: ubuntu-latest
    container: ghcr.io/gentoo-docker-builds/gendev:latest
    outputs:
      version: ${{ steps.version.outputs.LATEST }}
    steps:

      - name: fetch latest available kubectl version in portage
        run: |
          version=$(ACCEPT_KEYWORDS="~amd64" emerge -s sys-cluster/kubernetes | grep "Latest version available" | awk '{print $4}')
          echo "::set-env name=LATEST::$version"
          echo "::set-output name=LATEST::$version"
        id: version

      - name: latest kubectl version
        run: echo 'Latest available kubectl version in portage is' $LATEST

  build_image:
    needs: [check_version]
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

  push_container:
    needs: [build_image]
    runs-on: ubuntu-latest
    steps:

      - name: Push image to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from portage run
          VERSION=${{steps.check_version.outputs.version}}

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
